import socket
import os

# List of common ports to scan
common_ports = [21, 22, 23, 25, 53, 80, 110, 143, 443, 445, 3306, 8080, 8443]

# Clear screen on startup
os.system('clear' if os.name == 'posix' else 'cls')

# Tool Banner
logo = """
██╗    ██╗███████╗██████╗ ███████╗ ██████╗ █████╗ ███╗   ██╗
██║    ██║██╔════╝██╔══██╗██╔════╝██╔════╝██╔══██╗████╗  ██║
██║ █╗ ██║█████╗  ██████╔╝███████╗██║     ███████║██╔██╗ ██║
██║███╗██║██╔══╝  ██╔═══╝ ╚════██║██║     ██╔══██║██║╚██╗██║
╚███╔███╔╝███████╗██║     ███████║╚██████╗██║  ██║██║ ╚████║
 ╚══╝╚══╝ ╚══════╝╚═╝     ╚══════╝ ╚═════╝╚═╝  ╚═╝╚═╝  ╚═══╝
------------------------------------------------------------
              🛠️ Web Scanner Tool 🛠️
      📌 Instagram: ya ya la 19 📌
------------------------------------------------------------
"""
print(logo)

# Ask user for the target domain
target = input("[+] Enter website domain (e.g., example.com): ")

try:
    # Get IP address
    ip_address = socket.gethostbyname(target)
    print(f"\n[✔] IP Address of {target}: {ip_address}\n")
    
    # Scan for open ports
    print("[🚀] Scanning for open ports...\n")
    open_ports = []
    for port in common_ports:
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        sock.settimeout(1)
        result = sock.connect_ex((ip_address, port))
        sock.close()
        
        if result == 0:
            open_ports.append(port)
            print(f"[+] Port {port} is open ✅")
    
    if not open_ports:
        print("[❌] No open ports found!")

except socket.gaierror:
    print("\n[❌] Error: Unable to resolve domain to an IP address!")
except KeyboardInterrupt:
    print("\n[⚠] Scan interrupted by user!")

print("\n[✔] Scan completed successfully! 🚀")
